import the matrix multiplier function:

	>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

test case 1: multiply a simple 2*2 matrices:

	>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
	[[7, 10], [15, 22]]

test case 2: multiply a 2*2 matrix by a 2*1 matrix

	>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
	[[13, 16]]

test case 3: first arg is not list

	>>> print(matrix_mul(1, [[3, 4], [5, 6]]))
	Traceback (most recent call last):
	TypeError: m_a must be a list

test case 4: second arg is not list

        >>> print(matrix_mul([[1, 2], [3, 4]], 2))
        Traceback (most recent call last):
        TypeError: m_b must be a list

test case 4: mat_a is list of lists

	>>> print(matrix_mul([1, 2], [[1,3], [1,4]]))
	Traceback (most recent call last):
	TypeError: m_a must be a list of lists

test case 5: m_b is a list of lists

	>>> print(matrix_mul([[1,2]], [1,2]))
	Traceback (most recent call last):
	TypeError: m_b must be a list of lists

test case 6: m_a is empty

	>>> print(matrix_mul([[]], [[1, 2], [2, 3]]))
	Traceback (most recent call last):
	ValueError: m_a can't be empty

test case 7: m_b is empty

	>>> print(matrix_mul([[1,1], [1,1]], []))
	Traceback (most recent call last):
	ValueError: m_b can't be empty

test case 8: element in mat a is not int or float

	>>> print(matrix_mul([['a',2]], [[2, 3]]))
	Traceback (most recent call last):
	TypeError: m_a should contain only integers or floats

test case 9: element in mat b is not int or float

	>>> print(matrix_mul([[1,1]], [['a', 3]]))
	Traceback (most recent call last):
	TypeError: m_b should contain only integers or floats

test case 10: m_a is not rectangle

	>>> print(matrix_mul([[1, 3, 4], [1, 3]], [[2, 4], [4, 5]]))
	Traceback (most recent call last):
	TypeError: each row of m_a must be of the same size

test case 11: m_b is not rectangle

	>>> print(matrix_mul([[1,1], [5, 5]], [[2, 5, 5], [3 , 5]]))
	Traceback (most recent call last):
	TypeError: each row of m_b must be of the same size

test case 12: m_a and m_b can't be multiplied

	>>> print(matrix_mul([[1, 3, 5]], [[3, 4]]))
	Traceback (most recent call last):
	ValueError: m_a and m_b can't be multiplied

